what is microservice ?
	 it's an application architecture where the application is developed as a collection of services. Forexample 
	 Front-end services, Backend-services, Authentication-services, Notification Service, Log Service and much more
	 it breaks large application into smaller independent parts, with each part having its own responsibility.

what is Monolithic architecture ?
	it's single large application with one code-base that couples all business logics togeather.

why we use useEffect ?
	this hook tells react to do something/run function after our compoent renders. This call back function/side effect 
	is invoked afer updating DOM/rendering.

what is optional chaining ?
	The optional chaining (?) operator accesses an object's property or calls a function. And If the object accessed or
	 function invoked is undefined or null, the expression evaluates to undefined instead of throwing an error.

what is shimmer ui ?
	it's UX design that shows the skeleton of the UI to the user while the actual data renders into the page.

what is the difference between JS expression and JS statement ?	
	 an expression is a bit of JavaScript code that produces a value. expression can contain expression. Forexample:
	 (2 + 6) * 3 -> has 5 expression in total. While statment is an instruction for our program and doesn't evaluate to value. 
	 A JavaScript program is a sequence of statements. For Example: let x = 10; , create a variable, run an if/else condition, or start a loop. 
	 Inorder to know wheather a js-code is an expression or statment, we can console.log(/* our of JS-code here */);
	 If it runs, the code is an expression, If we get an error, it's a statement (or invalid JS). To summarise, Expression produce a value
	 while Statments doesn't. And note expressions can't exist on their own.  They're always part of a statement. if that statement empty, 
	 we call it wrapper statement. In react we can write js-code in {} in our jsx but this js-code must be an expression.
	 
what is cors ?
	CORS is browser security that restricts resources/scripts on a web page to be requested from another domain outside the domain 
	from which the first resource was served. It enables JavaScripts running in browsers to connect to APIs. Note A web page may freely embed 
	cross-origin images, stylesheets, scripts, iframes, and videos. But cross-origin Ajax requests, are forbidden by default by the same-origin security policy.

what is async, await ?
	async and await is simplified syntax used to write and consume promises. async makes a function return a Promise and await makes 
	a function wait for a Promise. Declaring a function with async keyword, makes a function return a promise. The await keyword 
	makes the function pause the execution and wait for a resolved promise before it continues.

why we do data.json() in fetch request ?
	The Fetch API returns a response of body-stream in the promise. The response stream is not JSON, so trying to call JSON.parse on it will fail. 
	so we use awant data.json() method to parse the stream into Json.