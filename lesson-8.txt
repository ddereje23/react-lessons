How do you create nested route in react-router-dom configuration ?
	define children property inside the element that needs nested route.

what is the order of life-cycle method calls in class based component ?
	constructor --> render --> componentDidMount --> render --> componentDidUpdate --> componentWillUnmount

why do we use componentDidMount ?
	to make api calls or run sideEffects. It's called after render because we want to show something
	to the user with initial/deafult value (user friendly UX). And later we can make api-call and update 
	the sate in the componentDidMount which will trigger another render due to change in state.

why do we use componentWillUnmount ?
	this life-cycle method is used to clean-up hanging resources or subscription. For-example: 
	setTimeOut, setInterval, API calls and so on.

why do we use super(props) in constructor ?
	Child class component only knows how to initialise its own properties/instance variables. And given,
	Child-class component inherits properties/derived-variables from its parent-component. Super() is used 
	to initialise those inherited properties/instance-variables. This is becuase constructor is not inherited.
	only methods and variables are inherited in object-oriented-programming.
	super(props) is used to attach props to 'this' keyword. It's used to access this.props inside the constructor.

why can't we have the call-back function of useEffect async ?
	useEffect() is only exepteted to return nothing or clean-up function. But if we make the call-back
	function inside useEffect() async, we will be returing a promise and that is not exepteted by React.

what is the difference between createBrowserRouter, createHashRouter, and createMemoryRouter.
	hashRouter uses # symbol on the url. It's a router which uses client side hash routing. 
	Hash portion of the URL won’t be handled by server, server will always send the index.html for every request 
	and ignore hash value. Hash value will be handled by react router. Thus, the server will return 
	the pre # URL response (index.htmm), and then the post # path will be handled (or parsed) by your client-side 
	react application. Used to support legacy browsers.
	broserRouter will send GET request to the server which will return index.html(Single Page) file to the
	client. Refreshing the page causes the browser to send a GET request to the server using the current route.
	Thus, reloading or hitting the server directly might return 404 not found errors if it's not handled by server.
	used by many moderen browsers. 
	momoryRouter is router which doesn’t change the URL in your browser instead it keeps the URL changes in memory.
	It is very useful for testing and non browser environments. But in browser, It doesn’t have history. 
	So you can’t go back or forward using browser history